name: "Create Or Update Ref"
description: "Create ref with a given SHA or update it if it already exists."

inputs:
  github_token:
    description: "Github token used for API calls. Required scope - 'contents: write'"
    default: ${{ github.token }}

  owner:
    description: "Owner of the repository"
    default: ${{ github.repository_owner }}

  repo:
    description: "Repository name"
    default: ${{ github.event.repository.name }}

  ref:
    description: "Ref name"
    required: true

  sha:
    description: "Ref SHA"
    required: true

runs:
  using: "composite"
  steps:
    - name: Get ref info
      id: get-ref-info
      uses: ovsds/get-ref-info-action@v1
      with:
        github_token: ${{ inputs.github_token }}
        owner: ${{ inputs.owner }}
        repo: ${{ inputs.repo }}
        ref: ${{ inputs.ref }}

    - name: Create ref
      if: ${{ steps.get-ref-info.outputs.exists == 'false' }}
      shell: bash
      run: |
        # Create ref
        owner=${{ inputs.owner }}
        repo=${{ inputs.repo }}
        ref=${{ inputs.ref }}
        sha=${{ inputs.sha }}

        gh api \
          --method POST \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/$owner/$repo/git/refs \
          -F ref=refs/$ref \
          -F sha=$sha
      env:
        GH_TOKEN: ${{ inputs.github_token }}

    - name: Update ref
      if: ${{ steps.get-ref-info.outputs.exists == 'true' }}
      shell: bash
      run: |
        # Update ref
        owner=${{ inputs.owner }}
        repo=${{ inputs.repo }}
        ref=${{ inputs.ref }}
        sha=${{ inputs.sha }}

        gh api \
          --method PATCH \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/$owner/$repo/git/refs/$ref \
          -F sha=$sha
      env:
        GH_TOKEN: ${{ inputs.github_token }}

branding:
  icon: "message-square"
  color: "gray-dark"
